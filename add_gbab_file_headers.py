# Usage: Send the git by a bus output folder path as a parameter from console
# This script adds headers to the tsv files generated by GBAB

__author__ = 'kevin'

import sys
from os import path

gen_file_stats = "gen_file_stats.tsv"
gen_file_stats_headers = "file_name\tfile_lines_count\tdeveloper_experience\n"

estimate_unique_knowledge = "estimate_unique_knowledge.tsv"
estimate_unique_knowledge_headers = "file_name\tfile_lines_count\tdeveloper_experience\t" \
                                    "total_knowledge\tdeveloper_unique\n"

estimate_file_risk = "estimate_file_risk.tsv"
estimate_file_risk_headers = "file_name\tlines_count\tdeveloper_experience\ttotal_knowledge\t" \
                             "developer_unique\tdeveloper_risk\n"

output_prefix = "h_"

def output_file_with_headers(input_file_path, output_file_path, headers):
    with open(input_file_path) as input:
        with open(output_file_path, "w") as output:
            output.write(headers)

            for line in input:
                output.write(line)


def get_file_paths(file_name):
    gbab_output_folder = sys.argv[1]
    input_file_path = path.join(gbab_output_folder, file_name)
    output_file_path = path.join(gbab_output_folder, output_prefix + file_name)

    return input_file_path, output_file_path


def main():
    input_file, output_file = get_file_paths(gen_file_stats)
    output_file_with_headers(input_file, output_file, gen_file_stats_headers)

    input_file, output_file = get_file_paths(estimate_unique_knowledge)
    output_file_with_headers(input_file, output_file, estimate_unique_knowledge_headers)

    input_file, output_file = get_file_paths(estimate_file_risk)
    output_file_with_headers(input_file, output_file, estimate_file_risk_headers)


if __name__ == "__main__":
    main()